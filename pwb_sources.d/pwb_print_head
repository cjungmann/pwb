# -*- mode:shell-script; sh-shell:bash  -*-
# shellcheck shell=bash
# shellcheck disable=SC2317

## BEGIN_DOC
## As much as fits in the area, print the lines in an array of
## strings to the header of the page.
##
## The head print region will exclude left and right margins.
## Use pwb_print_array with appropriate options to print in the
## margins.
## END_DOC

source <( pwb_sources pwb_print_array pwb_read_args )

pwb_print_head()
{
    local handle_name array_name color_string
    local justification=c

    local -a cmd_args=( "$@" )
    local -a arg_names=( handle_name array_name )
    local -a opts_list=(
        j+  justification
        c+  color_string
    )

    if pwb_read_args cmd_args arg_names opts_list; then
        if ! pwb get_dimensions "$handle_name"; then
            echo "Bad handle name, '$handle_name'"
            exit 1
        fi

        local -i top_line="1"
        local -i line_count="${PWB_ASSOC[margin_top]}"
        local -i char_count=$(( PWB_ASSOC[screen_cols] \
                                         - PWB_ASSOC[margin_left] \
                                         - PWB_ASSOC[margin_right] ))

        # erase entire screen:
        printf $'\e[2J'

        if [ -n "$color_string" ]; then
            printf $'\e[%sm' "$color_string"
        fi

        pwb_print_array "$array_name" \
                        -t "$top_line" \
                        -c "$line_count"  \
                        -l "${PWB_ASSOC[margin_left]}" \
                        -w "$char_count"  \
                        -j "$justification"

        if [ -n "$color_string" ]; then
            printf $'\e[39;49m'
        fi
    fi
}
