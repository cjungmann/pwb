# -*- mode:shell-script; sh-shell:bash  -*-
# shellcheck shell=bash
# shellcheck disable=SC2317

#> pwb_show_message handle strings_array_name

declare PSM_CHAR_HORZ=$'\u2500'
declare PSM_CHAR_VERT=$'\u2502'
declare PSM_CHAR_UL=$'\u250C'
declare PSM_CHAR_UR=$'\u2510'
declare PSM_CHAR_LL=$'\u2514'
declare PSM_CHAR_LR=$'\u2518'


pwb_show_message()
{
   local handle="$1"
   local -n psm_lines="$2"

   # From submitted lines, get count and maximum length
   local -i curlen maxlen=0
   local -i count=0
   for line in "${psm_lines[@]}"; do
       pwb measure_string curlen "$line"
       (( maxlen = curlen>maxlen ? curlen : maxlen ))
       (( ++count ))
   done

   # Get screen dimensions
   local -A dims
   pwb get_dimensions "$handle" dims

   # UL origin of text box
   local -i pleft ptop
   (( pleft = (dims[screen_cols] - maxlen - 2) / 2 ))
   (( ptop = (dims[screen_lines] - count - 2) / 2 ))
   # Cursor to origin
   printf $'\e[%d;%dH' "$ptop" "$pleft"

   # Prepare repeat-use strings
   local lf_left_position right_border
   # LF/CR, erase next line domain
   printf -v lf_position $'\e[1E\e[%dG\e[%dX' "$pleft" $(( maxlen+2 ))
   # Right to border, print border character
   printf -v right_border $'\e[%dG%s' $(( pleft + maxlen + 1 )) "$PSM_CHAR_VERT"

   # print top line
   local scratch
   printf -v scratch "${PSM_CHAR_UL}%*s$PSM_CHAR_UR" "$maxlen" $' '
   printf "%s" "${scratch// /$PSM_CHAR_HORZ}"

   # print contents
   for line in "${psm_lines[@]}"; do
       printf "%s" "$lf_position"
       printf "${PSM_CHAR_VERT}%s" "$line"
       printf "%s" "$right_border"
   done

   # print bottom line
   printf "%s" "$linefeed"
   printf -v scratch "${PSM_CHAR_LL}%*s$PSM_CHAR_LR" "$maxlen" $' '
   printf "%s" "${scratch// /$PSM_CHAR_HORZ}"
}
